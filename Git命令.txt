git config --global user.name "Your Name"
git config --global user.email "email@example.com"
--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，
当然也可以对某个仓库指定不同的用户名和Email地址。
**********************************************************************************************************************************
初始化一个Git仓库，使用git init命令。
添加文件到Git仓库，分两步：
第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
第二步，使用命令git commit，完成。
git init: 创建了.git隐藏文件
git add: 多次添加文件
git commit: 可以一次上传多个文件
**********************************************************************************************************************************
要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
git status: 命令可以让我们时刻掌握仓库当前的状态,知道哪些文件被修改了但并未上传
git diff(diff:difference): 通过git status命令知道哪个文件被修改了,可通过git diff查看文件里边修改了哪些东西,对比和文件修改前后的差异
						   git diff readme.txt
						   当前工作区的readme.txt和版本库进行对比:git diff HEAD -- readme.txt 
**********************************************************************************************************************************
git log(简化输出信息参数:--pretty=oneline):命令显示从最近到最远的提交日志

在Git中，用HEAD表示当前版本，也就是最新的提交3628164...882e1e0（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，
上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100
git reset,例回到上一个版本:git reset --hard HEAD^
git reset --hard 3628164(这个数字是commit id,对应上传后的版本)
用git reflog查看命令历史，以便确定要回到未来的哪个版本。
**********************************************************************************************************************************
你又理解了Git是如何跟踪修改的，每次修改，如果不add到暂存区，那就不会加入到commit中。
**********************************************************************************************************************************
git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销,例:git checkout -- readme.txt
总之，就是让这个文件回到最近一次git commit或git add时的状态
git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令。
未添加到暂存区时的撤销修改:git checkout -- readme.txt
已添加到暂存区时的撤销修改:git reset HEAD readme.txt,暂存区的修改回退到工作区,再用git checkout -- readme.txt

场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
**********************************************************************************************************************************
 使用rm test.txt删除后,一是确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit.
 另一种情况是删错了，因为版本库里还有呢，所以可以用git checkout -- test.txt命令很轻松把误删的文件恢复到最新版本：
**********************************************************************************************************************************
git pull: 更新当前分支
git pull origin master: 更新 origin remote 的 master 分支
git fetch: 获取服务器端的改动，比如其他用户新建了一个分支并push到了服务器，运行这个命令之后会得到这个分支的信息
 
 